{"version":3,"sources":["webpack:///assets/js/pages/andon_andonLog_230f128a8f919086e2e0.js","webpack:///./src/js/pages/andon/andonLog.js?ebe0"],"names":["webpackJsonp","614","module","exports","__webpack_require__","$","i18next","security","util","andonLogCtrl","page","undefined","datatableApi","queryParam","serviceCode","workCenterCode","stationCode","typeCode","statusECode","minSwitchOnDateTime","maxSwitchOnDateTime","init","document","off","setBreadcrumb","t","this","loadPage","translate","event","on","e","Sweet","rightPanelView","router","myApp","openPanel","_this","scrollY","height","dataTable","ordering","order","ajax","param","columns","data","render","type","row","meta","name","width","statusText","bgColor","time","Math","abs","switchOffDateTime","getServerDateTime","switchOnDateTime","value","theTime","parseInt","theTimeMinute","theTimeHour","hour","minute","second","getzf","num","tmpDate","Date","year","getFullYear","mathon","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","reloadDatatableByParam","extend","reload","call"],"mappings":"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","file":"assets/js/pages/andon_andonLog_230f128a8f919086e2e0.js","sourcesContent":["webpackJsonp([36],{\n\n/***/ 614:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, i18next) {\n\nvar security = __webpack_require__(35);\nvar util = __webpack_require__(34);\n\nvar andonLogCtrl = {\n    page: undefined,\n    datatableApi: undefined,\n    queryParam: {\n        serviceCode: \"GMES-CLIENT-ANDON005\",\n        workCenterCode: \"\",\n        stationCode: \"\",\n        typeCode: \"\",\n        statusECode: \"\",\n        minSwitchOnDateTime: \"\",\n        maxSwitchOnDateTime: \"\"\n    },\n    init: function init() {\n        $(document).off(\"keydown\");\n        util.setBreadcrumb([i18next.t(\"ANDON.T.MENU_ANDONRUNLOG\")]);\n        this.loadPage();\n        util.translate('.page[data-page=\"andonLog\"]');\n        this.event();\n    },\n    event: function event() {\n        $(\".toggle-right-btn\").on(\"click\", function (e) {\n            Sweet.rightPanelView.router.loadPage('views/andon/andonLog-set.html');\n            myApp.openPanel('right');\n        });\n    },\n\n    loadPage: function loadPage() {\n        var _this = this;\n        var scrollY = this.page.height - 126;\n\n        this.datatableApi = util.dataTable($('.table-panel table', this.page), {\n            \"scrollY\": scrollY,\n            \"ordering\": false,\n            \"order\": [],\n            \"ajax\": {\n                serviceCode: \"GMES-CLIENT-ANDON005\",\n                param: function param() {\n                    return _this.queryParam;\n                }\n            },\n            \"columns\": [{\n                \"data\": \"id\",\n                \"render\": function render(data, type, row, meta) {\n                    return meta[\"settings\"][\"_iDisplayStart\"] + meta.row + 1;\n                }\n            }, {\n                \"data\": \"workCenterText\",\n                \"name\": \"workCenterText\"\n            }, {\n                \"data\": \"stationText\",\n                \"name\": \"stationText\"\n            }, {\n                \"data\": \"typeText\",\n                \"name\": \"typeText\"\n            }, {\n                \"name\": \"statusECode\",\n                \"width\": \"65px\",\n                \"render\": function render(data, type, row) {\n                    var statusText;\n                    var bgColor;\n                    switch (row.statusECode) {\n                        case \"1\":\n                            {\n                                statusText = i18next.t(\"ANDON.T.STATUS_TOUCH\");\n                                bgColor = \"#ef5362\";\n                                break;\n                            }\n                        case \"3\":\n                            {\n                                statusText = i18next.t(\"ANDON.T.STATUS_CLOSE\");\n                                bgColor = \"#ffce54\";\n                                break;\n                            }\n                        default:\n                            statusText = \"确认\";\n                            bgColor = \"#27c24c\";\n                    }\n                    return '<span style=\"padding:5px 15px;background:' + bgColor + ';border-radius:15px;\">' + statusText + '</span>';\n                }\n            }, {\n                \"name\": \"triggerTime\",\n                \"render\": function render(data, type, row) {\n                    var time = Math.abs((row.switchOffDateTime || security.getServerDateTime()) - row.switchOnDateTime) / 1000;\n                    return formatSeconds(time);\n\n                    function formatSeconds(value) {\n                        var theTime = parseInt(value);\n                        var theTimeMinute = 0;\n                        var theTimeHour = 0;\n                        if (theTime > 60) {\n                            theTimeMinute = parseInt(theTime / 60);\n                            theTime = parseInt(theTime % 60);\n                            if (theTimeMinute > 60) {\n                                theTimeHour = parseInt(theTimeMinute / 60);\n                                theTimeMinute = parseInt(theTimeMinute % 60);\n                            }\n                        }\n                        var result = i18next.t(\"COMMON.T.TIME\", {\n                            hour: parseInt(theTimeHour),\n                            minute: parseInt(theTimeMinute),\n                            second: parseInt(theTime)\n                        });\n                        return result;\n                    }\n                }\n            }, {\n                \"data\": \"switchOnDateTime\",\n                \"name\": \"switchOnDateTime\",\n                \"render\": function render(data, type, row) {\n                    return formatDate(data);\n\n                    function formatDate(time) {\n                        var tmpDate = new Date(time);\n                        var year = tmpDate.getFullYear();\n                        var mathon = tmpDate.getMonth() + 1;\n                        var day = tmpDate.getDate();\n                        var hours = tmpDate.getHours();\n                        var minutes = tmpDate.getMinutes();\n                        var seconds = tmpDate.getSeconds();\n                        return year + '-' + getzf(mathon) + '-' + getzf(day) + ' ' + getzf(hours) + ':' + getzf(minutes) + ':' + getzf(seconds);\n\n                        function getzf(num) {\n                            if (parseInt(num) < 10) {\n                                num = '0' + num;\n                            }\n                            return num;\n                        }\n                    }\n                }\n            }, {\n                \"data\": \"switchOnUser\",\n                \"name\": \"switchOnUser\"\n            }, {\n                \"data\": \"memo\",\n                \"name\": \"memo\"\n            }]\n        });\n    },\n\n    reloadDatatableByParam: function reloadDatatableByParam(param) {\n        this.queryParam = $.extend({}, this.queryParam, param);\n        this.datatableApi.ajax.reload();\n    }\n};\n\nmodule.exports = andonLogCtrl;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(37)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/pages/andon_andonLog_230f128a8f919086e2e0.js","// andon台账\r\nvar security = require(\"security\");\r\nvar util = require('util');\r\n\r\nvar andonLogCtrl = {\r\n\tpage : undefined,\r\n    datatableApi : undefined,\r\n    queryParam : {\r\n        serviceCode : \"GMES-CLIENT-ANDON005\",\r\n        workCenterCode : \"\",\r\n        stationCode : \"\",\r\n        typeCode : \"\",\r\n        statusECode : \"\",\r\n        minSwitchOnDateTime : \"\",\r\n        maxSwitchOnDateTime : \"\"\r\n    },\r\n\tinit: function() {\r\n        $(document).off(\"keydown\");\r\n\t\tutil.setBreadcrumb([i18next.t(\"ANDON.T.MENU_ANDONRUNLOG\")]);\r\n\t\tthis.loadPage();\r\n        util.translate('.page[data-page=\"andonLog\"]');\r\n\t\tthis.event();\r\n\t},\r\n\tevent: function(){\r\n        // 点击右侧按钮可弹出右侧查询栏\r\n\t\t$(\".toggle-right-btn\").on(\"click\",function(e){\r\n\t\t\tSweet.rightPanelView.router.loadPage('views/andon/andonLog-set.html');\r\n\t\t\tmyApp.openPanel('right');\r\n\t\t})\r\n\t},\r\n    // 默认加载图表\r\n\tloadPage : function(){\r\n        var _this = this;\r\n        var scrollY = (this.page.height-126);\r\n//      require(\"widget\");\r\n//      require(\"recordTable\");\r\n        // 调用封装好的dataTable实例化方法\r\n        this.datatableApi = util.dataTable($('.table-panel table',this.page),{\r\n//       $('.table-panel table',this.page).recordTable({\r\n            \"scrollY\": scrollY,\r\n            \"ordering\": false,\r\n            \"order\" : [],\r\n            \"ajax\" : {\r\n                serviceCode : \"GMES-CLIENT-ANDON005\",\r\n                param : function(){\r\n                    return  _this.queryParam;\r\n                }\r\n            },\r\n            \"columns\": [\r\n                {\r\n                    \"data\": \"id\",\r\n                    \"render\": function ( data, type, row,meta  ) {\r\n                        return meta[\"settings\"][\"_iDisplayStart\"] + meta.row+1\r\n                    }\r\n                },\r\n                {\r\n                    \"data\": \"workCenterText\",\r\n                    \"name\": \"workCenterText\"\r\n                },\r\n                {\r\n                    \"data\": \"stationText\",\r\n                    \"name\": \"stationText\"\r\n                },\r\n                {\r\n                    \"data\": \"typeText\",\r\n                    \"name\": \"typeText\"\r\n                },\r\n                {\r\n                    \"name\": \"statusECode\",\r\n                    \"width\" : \"65px\",\r\n                    \"render\": function ( data, type, row ) {\r\n                        var statusText;\r\n                        var bgColor;\r\n                        switch(row.statusECode){\r\n                            case \"1\":{\r\n                                statusText = i18next.t(\"ANDON.T.STATUS_TOUCH\");\r\n                                bgColor = \"#ef5362\";\r\n                                break;\r\n                            }\r\n                            case \"3\":{\r\n                                statusText = i18next.t(\"ANDON.T.STATUS_CLOSE\");\r\n                                bgColor = \"#ffce54\";\r\n                                break;\r\n                            }\r\n                            default:\r\n                                statusText = \"确认\";\r\n                                bgColor = \"#27c24c\";\r\n                        }\r\n                        return  '<span style=\"padding:5px 15px;background:' + bgColor + ';border-radius:15px;\">' + statusText + '</span>';\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"triggerTime\",\r\n                    \"render\": function ( data, type, row ) {\r\n                        var time = Math.abs((row.switchOffDateTime || security.getServerDateTime()) - row.switchOnDateTime)/1000;\r\n                        return formatSeconds(time);\r\n                        //将秒数换成时分秒格式\r\n                        function formatSeconds(value) {\r\n                            var theTime = parseInt(value);// 秒\r\n                            var theTimeMinute = 0;// 分\r\n                            var theTimeHour = 0;// 小时\r\n                            if(theTime > 60) {\r\n                                theTimeMinute = parseInt(theTime/60);\r\n                                theTime = parseInt(theTime%60);\r\n                                if(theTimeMinute > 60) {\r\n                                    theTimeHour = parseInt(theTimeMinute/60);\r\n                                    theTimeMinute = parseInt(theTimeMinute%60);\r\n                                }\r\n                            }\r\n                            var result = i18next.t(\"COMMON.T.TIME\",{\r\n                                hour : parseInt(theTimeHour),\r\n                                minute : parseInt(theTimeMinute),\r\n                                second : parseInt(theTime)\r\n                            })\r\n                            return result;\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    \"data\": \"switchOnDateTime\",\r\n                    \"name\": \"switchOnDateTime\",\r\n                    \"render\": function ( data, type, row ) {\r\n                        return formatDate(data);\r\n                        //将秒数换成日期格式 YY-MM-DD hh:mm:ss\r\n                        function formatDate(time) {\r\n                            var tmpDate=new Date(time);\r\n                            var year = tmpDate.getFullYear();\r\n                            var mathon = tmpDate.getMonth() + 1;\r\n                            var day = tmpDate.getDate();\r\n                            var hours = tmpDate.getHours();\r\n                            var minutes = tmpDate.getMinutes();\r\n                            var seconds = tmpDate.getSeconds();\r\n                            return year + '-' + getzf(mathon) + '-' + getzf(day) + ' ' + getzf(hours) + ':' + getzf(minutes) + ':' +getzf(seconds);\r\n                            //补0操作\r\n                            function getzf(num){\r\n                                if(parseInt(num) < 10){\r\n                                    num = '0'+num;\r\n                                }\r\n                                return num;\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    \"data\": \"switchOnUser\",\r\n                    \"name\": \"switchOnUser\"\r\n                },\r\n                {\r\n                    \"data\": \"memo\",\r\n                    \"name\": \"memo\"\r\n                }\r\n            ]\r\n        })\r\n\t},\r\n    // 根据查询栏输入的查询参数重新加载图表\r\n    reloadDatatableByParam: function(param) {\r\n        this.queryParam = $.extend({},this.queryParam,param);\r\n        this.datatableApi.ajax.reload();\r\n    }\r\n};\r\n\r\nmodule.exports = andonLogCtrl\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/pages/andon/andonLog.js"],"sourceRoot":""}